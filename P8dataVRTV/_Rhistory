library('RHRV')
#import IBI data in milliseconds (three digits e.g 569, no decimal) from file
#first set directory to where the data file is located - here it's to the HRV Data folder in Kejser's P8 Google Drive folder
setwd("C:/Users/Kejser/Google Drive/University/P8/P8 - Artwork Stress VR/Data Analysis/HRV/Data/real data")
#Write which participant's data you want to load
participant = 1
source("CreateTimeAnalysisByEpisodes.R")
file_list = list.files()
file_list = file_list[grepl(".txt", file_list)]
part_number = (participant * 2) - 1
part_timestamp = part_number + 1
IBI<-read.csv(file = file_list[part_number]) #insert .txt file name here
tsIBI<-as.data.frame(cumsum(c(0, IBI[2:nrow(IBI),]/1000)))
names(tsIBI)<-c('beats')
#create data structure
hrv.data  = CreateHRVData()
baseline.data = CreateHRVData()
stressor.data = CreateHRVData()
intervention.data = CreateHRVData()
participant.data =CreateHRVData()
hrv.data = SetVerbose(hrv.data, TRUE )
#need to write data back to file as I couldn't figure out how to simply inject it into the data structure, not sure whether there are dependencies
write.table(tsIBI$beats, file = "testTSibi.txt", sep = ",", qmethod = "double", row.names = FALSE, col.names = FALSE)
#you need to go to the text file now and remove the first line with "x" and save again
#then you can run the next commands
hrv.data = LoadBeatAscii(hrv.data, "testTSibi.txt")
#hrv.data = AddEpisodes(hrv.data,
#                      InitTimes = c(0,502,892),
#                     Tags = c("Baseline", "Stressor","Intervention"),
#                    Durations = c(300,300,600),
#                   Values = c(0,0,0))
hrv.data = LoadEpisodesAscii(hrv.data,File = file_list[part_timestamp],header = FALSE)
hrv.data = BuildNIHR(hrv.data)
hrv.data = FilterNIHR(hrv.data)
hrv.data = InterpolateNIHR(hrv.data, freqhr = 4)
PlotNIHR(hrv.data, main = "niHR",Tags = "all")
hrv.data = CreateTimeAnalysis(hrv.data, size = 300, interval = 7.8125)
baseline.data$TimeAnalysis = CreateTimeAnalysisByEpisodes(hrv.data, Tag = "Baseline")
baseline.data[["TimeAnalysis"]][["resultIn"]][["SDNN"]]
baseline.data[["TimeAnalysis"]][["resultIn"]][["pNN50"]]
baseline.data[["TimeAnalysis"]][["resultIn"]][["rMSSD"]]
stressor.data$TimeAnalysis = CreateTimeAnalysisByEpisodes(hrv.data, Tag = "Stressor")
stressor.data[["TimeAnalysis"]][["resultIn"]][["SDNN"]]
stressor.data[["TimeAnalysis"]][["resultIn"]][["pNN50"]]
stressor.data[["TimeAnalysis"]][["resultIn"]][["rMSSD"]]
intervention.data$TimeAnalysis = CreateTimeAnalysisByEpisodes(hrv.data, Tag = "Intervention")
intervention.data[["TimeAnalysis"]][["resultIn"]][["SDNN"]]
intervention.data[["TimeAnalysis"]][["resultIn"]][["pNN50"]]
intervention.data[["TimeAnalysis"]][["resultIn"]][["rMSSD"]]
hrv.data = CreateFreqAnalysis(hrv.data)
hrv.data = SetVerbose(hrv.data,TRUE)
hrv.data =
CalculatePowerBand(hrv.data , indexFreqAnalysis = 1,
size = 100, shift = 2, type = "fourier",
ULFmin = 0, ULFmax = 0.03, VLFmin = 0.03, VLFmax = 0.05,
LFmin = 0.05, LFmax = 0.15, HFmin = 0.15, HFmax = 0.4 )
baseline.data$FreqAnalysis = SplitPowerBandByEpisodes(hrv.data, indexFreqAnalysis = 1, Tag = c("Baseline"))
stressor.data$FreqAnalysis = SplitPowerBandByEpisodes(hrv.data, indexFreqAnalysis = 1, Tag = c("Stressor"))
intervention.data$FreqAnalysis = SplitPowerBandByEpisodes(hrv.data, indexFreqAnalysis = 1, Tag = c("Intervention"))
baseline.data$FreqAnalysis$InEpisodes$LFHF <- baseline.data$FreqAnalysis$InEpisodes$LF / baseline.data$FreqAnalysis$InEpisodes$HF
stressor.data$FreqAnalysis$InEpisodes$LFHF <- stressor.data$FreqAnalysis$InEpisodes$LF / stressor.data$FreqAnalysis$InEpisodes$HF
intervention.data$FreqAnalysis$InEpisodes$LFHF <- intervention.data$FreqAnalysis$InEpisodes$LF / intervention.data$FreqAnalysis$InEpisodes$HF
PlotPowerBand(hrv.data, indexFreqAnalysis = 1, ymax = 1200, ymaxratio = 16, Tags = c("Baseline","Intervention","Stressor"))
participant.data$baseline <- baseline.data
participant.data$stressor <- stressor.data
participant.data$intervention <- intervention.data
# see here for more details on size of windows, shifts etc.
# https://cran.r-project.org/web/packages/RHRV/vignettes/RHRV-quickstart.html
